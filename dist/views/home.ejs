<div class="hero text-center">
  <div class="hero-icon mb-4">
    <svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="url(#hero-gradient)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <defs>
        <linearGradient id="hero-gradient" x1="0%" y1="0%" x2="100%" y2="0%">
          <stop offset="0%" stop-color="#818CF8" />
          <stop offset="100%" stop-color="#06B6D4" />
        </linearGradient>
      </defs>
      <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
      <polyline points="7 10 12 15 17 10"></polyline>
      <line x1="12" y1="15" x2="12" y2="3"></line>
    </svg>
  </div>
  <h1>Share Files Securely</h1>
  <p class="hero-subtitle">Fast, simple, and secure file sharing without the hassle</p>
</div>

<div class="upload-card">
  <div class="upload-steps">
    <div class="step active">
      <div class="step-number">1</div>
      <div class="step-text">Choose File</div>
    </div>
    <div class="step-connector"></div>
    <div class="step">
      <div class="step-number">2</div>
      <div class="step-text">Configure</div>
    </div>
    <div class="step-connector"></div>
    <div class="step">
      <div class="step-number">3</div>
      <div class="step-text">Upload</div>
    </div>
  </div>

  <form id="uploadForm" action="/" method="post" enctype="multipart/form-data">
    <div class="upload-dropzone" id="uploadDropzone">
      <input id="fileInput" type="file" name="uploadfile" required>
      <div class="dropzone-content">
        <div class="dropzone-icon">
          <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
            <polyline points="17 8 12 3 7 8"></polyline>
            <line x1="12" y1="3" x2="12" y2="15"></line>
          </svg>
        </div>
        <div class="dropzone-text">
          <span class="dropzone-title">Drop your file here or click to browse</span>
          <span class="dropzone-subtitle">Maximum file size: 2GB</span>
        </div>
      </div>
      <div class="file-preview" id="filePreview">
        <div class="file-icon">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
            <polyline points="14 2 14 8 20 8"></polyline>
            <line x1="16" y1="13" x2="8" y2="13"></line>
            <line x1="16" y1="17" x2="8" y2="17"></line>
            <polyline points="10 9 9 9 8 9"></polyline>
          </svg>
        </div>
        <div class="file-info">
          <span class="file-name" id="selectedFileName"></span>
          <span class="file-size" id="selectedFileSize"></span>
        </div>
        <button type="button" class="file-remove" id="removeFile">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
        </button>
      </div>
    </div>

    <div id="uploadControls" class="upload-controls">
      <h3>File Options</h3>

      <div class="form-group">
        <label for="expiryDays">File will expire after:</label>
        <select name="expiryDays" id="expiryDays" class="select-styled">
          <option value="1">1 day</option>
          <option value="3">3 days</option>
          <option value="7" selected>7 days</option>
          <option value="14">14 days</option>
          <option value="30">30 days</option>
        </select>
      </div>

      <button type="submit" class="btn btn-primary upload-button">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
          <polyline points="17 8 12 3 7 8"></polyline>
          <line x1="12" y1="3" x2="12" y2="15"></line>
        </svg>
        Upload File
      </button>
    </div>
  </form>
</div>

<div class="features">
  <div class="feature-card">
    <div class="feature-icon">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect>
        <path d="M7 11V7a5 5 0 0 1 10 0v4"></path>
      </svg>
    </div>
    <h3>Secure Sharing</h3>
    <p>Your files are encrypted and protected from unauthorized access</p>
  </div>

  <div class="feature-card">
    <div class="feature-icon">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <circle cx="12" cy="12" r="10"></circle>
        <polyline points="12 6 12 12 16 14"></polyline>
      </svg>
    </div>
    <h3>Time-Limited</h3>
    <p>Files automatically expire after your chosen time period</p>
  </div>

  <div class="feature-card">
    <div class="feature-icon">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"></path>
        <polyline points="13 2 13 9 20 9"></polyline>
      </svg>
    </div>
    <h3>No Sign-up</h3>
    <p>No account needed, just upload and share your files</p>
  </div>
</div>

<style>
  /* Removed duplicated :root CSS variables that are already in the main layout */
  
  /* Rest of your existing styles */
  .hero {
    margin-bottom: 3rem;
    animation: fadeIn 0.8s ease-out;
  }

  .hero-icon {
    display: inline-block;
    animation: pulse 2s infinite ease-in-out;
  }

  .hero-subtitle {
    font-size: 1.25rem;
    max-width: 600px;
    margin: 0 auto 2rem;
    opacity: 0.8;
  }

  .upload-card {
    background: rgba(30, 41, 59, 0.4);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--radius-lg);
    padding: 2rem;
    margin-bottom: 3rem;
    box-shadow: var(--shadow-md);
  }

  .upload-steps {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 2rem;
  }

  .step {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    color: var(--gray-300);
  }

  .step.active {
    color: var(--primary-light);
  }

  .step-number {
    width: 2rem;
    height: 2rem;
    border-radius: var(--radius-full);
    background: rgba(255, 255, 255, 0.1);
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: 600;
  }

  .step.active .step-number {
    background: var(--primary);
    color: white;
  }

  .step-connector {
    height: 2px;
    width: 4rem;
    background: rgba(255, 255, 255, 0.1);
    margin: 0 0.5rem;
  }

  .upload-dropzone {
    border: 2px dashed rgba(255, 255, 255, 0.2);
    border-radius: var(--radius);
    padding: 2rem;
    text-align: center;
    position: relative;
    transition: all 0.3s ease;
    margin-bottom: 1.5rem;
    cursor: pointer;
  }

  .upload-dropzone:hover {
    border-color: var(--primary-light);
    background: rgba(79, 70, 229, 0.05);
  }

  .upload-dropzone.drag-over {
    border-color: var(--primary);
    background: rgba(79, 70, 229, 0.1);
  }

  .dropzone-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
  }

  .dropzone-icon {
    color: var(--gray-300);
    transition: all 0.3s ease;
  }

  .upload-dropzone:hover .dropzone-icon {
    color: var(--primary-light);
    transform: translateY(-5px);
  }

  .dropzone-text {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .dropzone-title {
    font-size: 1.25rem;
    font-weight: 500;
  }

  .dropzone-subtitle {
    font-size: 0.875rem;
    color: var(--gray-300);
    opacity: 0.7;
  }

  input[type="file"] {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    cursor: pointer;
  }

  .file-preview {
    display: none;
    background: rgba(15, 23, 42, 0.7);
    border-radius: var(--radius);
    padding: 1rem;
    display: none;
    align-items: center;
    gap: 1rem;
    animation: fadeIn 0.3s ease-out;
  }

  .file-icon {
    color: var(--gray-300);
    flex-shrink: 0;
  }

  .file-info {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    flex-grow: 1;
    text-align: left;
    overflow: hidden;
  }

  .file-name {
    font-weight: 500;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .file-size {
    font-size: 0.875rem;
    color: var(--gray-300);
    opacity: 0.7;
  }

  .file-remove {
    background: none;
    border: none;
    color: var(--gray-300);
    cursor: pointer;
    padding: 0.25rem;
    border-radius: var(--radius-full);
    transition: all 0.3s ease;
    flex-shrink: 0;
    box-shadow: none;
  }

  .file-remove:hover {
    color: var(--error);
    background: rgba(239, 68, 68, 0.1);
    transform: none;
    box-shadow: none;
  }

  .upload-controls {
    display: none;
    background: rgba(15, 23, 42, 0.7);
    border-radius: var(--radius);
    padding: 1.5rem;
    animation: fadeIn 0.5s ease-out;
  }

  .upload-controls h3 {
    margin-top: 0;
    margin-bottom: 1.5rem;
    font-size: 1.25rem;
  }

  .form-group {
    margin-bottom: 1.5rem;
  }

  .select-styled {
    background: rgba(30, 41, 59, 0.7);
    border: 1px solid rgba(255, 255, 255, 0.1);
    color: var(--light);
    padding: 0.75rem 1rem;
    border-radius: var(--radius);
    width: 100%;
    font-size: 1rem;
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%23cbd5e1' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 0.75rem center;
    background-size: 1rem;
  }

  .select-styled:focus {
    outline: none;
    border-color: var(--primary);
  }

  .upload-button {
    width: 100%;
    margin-top: 1rem;
  }

  .features {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1.5rem;
    margin-top: 3rem;
  }

  .feature-card {
    background: rgba(30, 41, 59, 0.4);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--radius);
    padding: 1.5rem;
    text-align: center;
    transition: all 0.3s ease;
  }

  .feature-card:hover {
    transform: translateY(-5px);
    border-color: rgba(255, 255, 255, 0.2);
    box-shadow: var(--shadow-md);
  }

  .feature-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 3rem;
    height: 3rem;
    border-radius: var(--radius-full);
    background: rgba(79, 70, 229, 0.1);
    color: var(--primary-light);
    margin-bottom: 1rem;
  }

  .feature-card h3 {
    font-size: 1.25rem;
    margin-bottom: 0.5rem;
  }

  .feature-card p {
    font-size: 0.875rem;
    margin-bottom: 0;
    color: var(--gray-300);
    opacity: 0.8;
  }

  @media (max-width: 768px) {
    .features {
      grid-template-columns: 1fr;
    }

    .upload-steps {
      flex-direction: column;
      gap: 1rem;
    }

    .step-connector {
      width: 2px;
      height: 1.5rem;
      margin: 0.25rem 0;
    }
  }
</style>

<script>
  const fileInput = document.getElementById('fileInput');
  const uploadDropzone = document.getElementById('uploadDropzone');
  const filePreview = document.getElementById('filePreview');
  const selectedFileName = document.getElementById('selectedFileName');
  const selectedFileSize = document.getElementById('selectedFileSize');
  const removeFile = document.getElementById('removeFile');
  const uploadControls = document.getElementById('uploadControls');
  const steps = document.querySelectorAll('.step');

  // Format file size
  function formatFileSize(bytes) {
    if (bytes < 1024) return bytes + ' bytes';
    if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(1) + ' KB';
    if (bytes < 1024 * 1024 * 1024) return (bytes / 1024 / 1024).toFixed(1) + ' MB';
    return (bytes / 1024 / 1024 / 1024).toFixed(1) + ' GB';
  }

  // Update active step
  function setActiveStep(stepIndex) {
    steps.forEach((step, index) => {
      if (index <= stepIndex) {
        step.classList.add('active');
      } else {
        step.classList.remove('active');
      }
    });
  }

  // Handle file selection
  fileInput.addEventListener('change', () => {
    if (fileInput.files.length > 0) {
      const file = fileInput.files[0];

      // Update file preview
      selectedFileName.textContent = file.name;
      selectedFileSize.textContent = formatFileSize(file.size);

      // Show file preview, hide dropzone content
      document.querySelector('.dropzone-content').style.display = 'none';
      filePreview.style.display = 'flex';

      // Show upload controls
      uploadControls.style.display = 'block';

      // Update active step
      setActiveStep(1);
    }
  });

  // Remove selected file
  removeFile.addEventListener('click', (e) => {
    e.preventDefault();
    e.stopPropagation();

    // Clear file input
    fileInput.value = '';

    // Hide file preview, show dropzone content
    document.querySelector('.dropzone-content').style.display = 'flex';
    filePreview.style.display = 'none';

    // Hide upload controls
    uploadControls.style.display = 'none';

    // Reset active step
    setActiveStep(0);
  });

  // Handle form submission
  document.getElementById('uploadForm').addEventListener('submit', () => {
    setActiveStep(2);
  });

  // Drag and drop support
  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
    uploadDropzone.addEventListener(eventName, preventDefaults, false);
  });

  function preventDefaults(e) {
    e.preventDefault();
    e.stopPropagation();
  }

  ['dragenter', 'dragover'].forEach(eventName => {
    uploadDropzone.addEventListener(eventName, highlight, false);
  });

  ['dragleave', 'drop'].forEach(eventName => {
    uploadDropzone.addEventListener(eventName, unhighlight, false);
  });

  function highlight() {
    uploadDropzone.classList.add('drag-over');
  }

  function unhighlight() {
    uploadDropzone.classList.remove('drag-over');
  }

  uploadDropzone.addEventListener('drop', handleDrop, false);

  function handleDrop(e) {
    const dt = e.dataTransfer;
    const files = dt.files;

    if (files.length > 0) {
      fileInput.files = files;

      // Trigger change event
      const event = new Event('change');
      fileInput.dispatchEvent(event);
    }
  }
</script>
